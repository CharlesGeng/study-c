#+title:打包和部署

* 基础和超越
  在本书中，你已经看了很多例子，创建不同类型的SharePoint部件并将他们部
  署到SharePoint中。在大部分情况下，我们可以在项目中添加部件（列表，网
  络部件，事件接收器等）然后按 F5 进行打包，并部署到SharePoint中。

  在本章，我们要讨论的是：在按F5键后，打包和部署SharePoint部件这些操作
  背后到底发生了什么。此外，还会讨论什么时候，怎么样以及为什么修改默认
  的打包和部署设置。还会展示如何使用Visual Studio来创建自定义的部署步
  骤和部署配置。
* SharePoint的特性（Features）
  为了全面了解VisualStudio2010提供的打包和部署特性，我们需要从
  SharePoint的基础模块：SharePoint特性（Features）开始。当理解了如何手
  工处理创建，部署和激活SharePoint特性后，VisualStudio2010做了如此多的
  工作来让开发人员可以轻易的部署SharePoint特性（Features）。

  当讨论SharePoint特性时，很可能马上会想到SharePoint特性是如何将额外的
  功能添加到SharePoint中的。当特性被部署到SharePoint服务器并并被激活，
  特性中的功能就可以被用到SharePoint的网站上了。从技术角度讲，
  SharePoint的特性就是一个被简单命名为Feature.xml的XML文件。
  Features.xml文件被称为特性列表文件（feature manifest file）.这个文件
  包含特性的一般信息，例如：ID，名称和范围。

  特性的ID和名称不用多说，这两个特性就是用来定义特性的唯一性的。名称就
  是一个任意的字符串，ID即GUID--全球唯一标识符--格式
  为:"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx". 其中 "x" 是十六进制中的任
  意数--从0到9以及a,b,c,d,e和f。大部分时候，VisualStudio会在需要时自动
  创建GUID，例如：在VisualStudio中新创建一个SharePoint特性，GUID会自己
  被创建。有时，即使需要创建自己的GUID，也不用手工创建。需要GUID时，可
  以在VisualStudio的工具栏中运行创建GUID指令，来生成GUID，并将新生成的
  GUID拷贝到剪切板，然后粘贴到需要的文件中。

  所有的SharePoint功能都是在特定范围内有效的，这些范围包括：Farm，Web
  Application，Site 或者 Web。如果一个特性的范围被设定为Farm，那么这个
  特性就会在服务器上的所有网站和网站集上有效。如果特性的范围被设定为
  Web，那么该特性仅在其安装的网站有效，并且该特性在该网站上已被激活。
  表格11-1显示了特性可以被部署和激活的四个范围。值得注意的是，对于
  SharePoint中自定义部件不能随意指定范围，一些SharePoint部件必须被安装
  在特定的范围内，例如，Content types和工作流只能被安装在Site范围内，
  而custom actions可以安装在任意范围。将会在SharePoint元素这节，会详细介绍
  各类型的SharePoint自定义部件可以安装在哪些范围内。

#+CAPTION: 表11-1：SharePoint特性的范围

|---+-----------------+--------------------------------------------------------------------------------------+---|
| / | <>              | <>                                                                                   |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Scope           | Description                                                                          |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Farm            | 特性如果被安装在Farm并激活，则在Farm中的所有网站可以使用该特性                       |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Web Application | 特性如果被安装在Web Application并激活，则在Web Application中的所有网站可以使用该特性 |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Site            | 特性如果被安装在Site并激活，则在网站集中的所有网站可以使用该特性                     |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Web             | 特性如果被安装在Web并激活，则在该网站中可以使用该特性                                |   |

  正如清单11-1所示，定义一个空的特性文件，至少需要名称、ID和范围，但是在
  大多数情况下，需要额外的属性来指定特性中关联的功能和自定义部件。

#+CAPTION: 清单11-1：最简单的可用的Features.xml特性表单

#+BEGIN_SRC xml   
  <Feature Title="SharePoint Feature"
           ID="2ED8F169-EA82-43A5-B4E5-641D8C03B811" Scope="Site">
  </Feature>
#+END_SRC

  可以将清单中的Feature.xml部署到SharePoint服务器上，但是这样做是没有
  意义的，因为特性文件是 *空* 的--它仅包含特性文件最小定义而不包含任何
  其他功能。
 
  特性清单文件一般会包含一个XML元素--ElementManifests, 它可以包含多个指
  向Elements.xml的名为ElementManifest的XML元素，Elements.xml文件中包含
  着特性中的功能的实际信息。之前的章节中，每个创建的SharePoint项目都包
  含一个Elements.xml文件。Elements.xml文件就是Feature.xml文件中
  ElementManifest元素所指向的文件。例如，如果想通过清单11-1中的特性文件
  部署一个名为MyElement1的SharePoint项目部件，需要添加ElementManifests
  元素，然后添加包含Location属性的ElementManifest子元素，Location属性
  被设置为描述MyElement1的Elements.xml的位置，见清单11-2
                                     |
#+BEGIN_SRC xml
  <Feature Title="SharePoint Feature"
           ID="2ED8F169-EA82-43A5-B4E5-641D8C03B811" Scope="Site">
    <ElementManifests>
      <ElementManifest Location="MyElement1\Elements.xml" />
    </ElementManifests>
  </Feature>
#+END_SRC

  如果想用同一个特性文件部署更多的SharePoint项目文件，只需要在
  ElementManifests元素中添加更多的ElementManifest元素，并在
  ElementManifest元素中添加Location属性，该属性指向关于SharePoint项目文
  件的Elements.xml.

  除了ElementManifests和ElementManifest，还有其他一些XML元素可以应用到
  特性文件中。清单11-3中显示了包含所有可用元素的特性文件的结构。

#+CAPTION: Feature.xml文件中可以包含的所有可用的XML元素

#+BEGIN_SRC xml
  <Feature>
    <ActivationDependencies>
      <ActivationDependency/>
      <ActivationDependency/>
    </ActivationDependencies>
    <ElementManifests>
      <ElementFile/>
      <ElementManifest/>
    </ElementManifests>
    <Properties>
      <Property/>
      <Property/>
    </Properties>
    <UpgradeActions>
      <AddContentTypeField/>
      <ApplyElementManifests>
        <ElementFile/>
        <ElementManifest/>
      </ApplyElementManifests>
      <CustomUpgradeAction>
        <Parameters>
          <Parameter/>
        </Parameters>
      </CustomUpgradeAction>
      <MapFile/>
      <VersionRange>
        <AddContentTypeField/>
        <ApplyElementManifests/>
        <CustomUpgradeAction/>
        <MapFile/>
      </VersionRange>
    </UpgradeActions>
  </Feature>
#+END_SRC

  表11-2描述了各个属性并举例说明。注意，表中不包含 *UpgradeActions* 元
  素，该元素会在本章后面介绍。


|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| / | <>                   | <>                                                                                                                                                                                                                                               | <>                                                                                                                                  |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | *元素*               | *描述*                                                                                                                                                                                                                                           | *示例*                                                                                                                              |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ActivationDependency | ActivationDependency元素通过特性ID指明当前特性依赖的另一特性，例如：这个功能可以用在以下情况，要部署一个List以及依赖于这个List的工作流，这个元素可以确保在激活工作流前先激活List。                                                               | <ActivationDependency FeatureID="C0BE46EA-0209-4285-B586-EC27EFA9B758"/>                                                            |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ElementFile          | ElementFile元素指明当前特性依赖的文件，例如：可以使用ElementFile元素来部署特性需要的文件（资源文件，文本文件，图片，ASPX文件，XML文件等）                                                                                                        | <ElementFile Location="Resources\Resources.resx" />                                                                                 |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ElementManifest      | ElementManifest元素用来指向Element.xml文件，Element.xml文件中包含了需要特性来部署的SharePoint项目对象的信息                                                                                                                                      | <ElementManifest Location="ListInstance1\Elements.xml" />                                                                           |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | Property             | Property元素是用来定义特性的属性的。特性的属性可能通过指定属性名和默认值来定义。可以在事件特性接收器的的代码中使用传给事件委托方法的 *属性* 参数（SPFeatureReceiverProperties类型）来访问属性，如：properties.Feature.Properties["Color"].Value. | <Properties>    <Property      Key="Color"      Value="Blue"/>    <Property      Key="Shape"      Value="Triangle"/>  </Properties> |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|

  SharePoint 2010中添加了一个新的名为UpgradeActions的元素。这个元素是针
  对指定的特性执行指定升级操作。这个元素的目的是指定如何升级现有的特性
  实例。例如，已经在SharePoint服务器上部署了特性（内容类型
  （ContentType）和网站列（site columns）),现在需要相应的删除网站列并更
  新内容类型，可以使用UpgradeAction元素来指定CustomUpgradeAction和一个
  参数，参数中包含需要删除的网站列名称。然后需要实现FeatureUpgrading事
  件接收方法并根据传入该方法的参数来决定更新操作名称和参数。表11-3列出
  了有哪些更新操作元素可以添加到特性列表文件中。

| / | <>                    | <>                                                                                                                                                             | <>                                                                                                        |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | 元素                  | 描述                                                                                                                                                           | 举例                                                                                                      |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | AddContentTypeField   | 将一个新列添加到已经存在的内容类型中，例如：已经在一个特性中部署了内容类型，现在想在内容类型中添加添加一个新列                                                 | <AddContentTypeField   ContentTypeId = string  FieldId = string  PushDown = TRUE or FALSE />              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | CustomUpgradeAction   | 在自定义更新操作中可以指定参数列表，这些参数会被传递给特性事件接收器中的FeatureUpgrading方法。见第五章的“SharePoint事件接收器”了解更多的信息                 | <CustomUpgradeAction   Name = string>  <Parameters>    <Parameter />  </Parameters></CustomUpgradeAction> |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | ApplyElementManifests | 用来提供更新操作引用的元素清单。这个元素可以包含ElementManifest和ElementFile。例如：需要包含一个用于部署额外部件到SharePoin功能的部件清单文件。                | <ApplyElementManifests>  <ElementFile />  <ElementManifest /></ApplyElementManifests>                     |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | Parameter             | 用来指定传给特性事件接收器的FeatureUpgrading方法中的参数                                                                                                       | <Parameter Name="ParameterName">ParameterValue</Parameter>                                                |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | MapFile               | 这个元素可以用来重命名或者移动文件。它有两个属性：FromPath和ToPath，可以用来指定源文件和目标文件。例如：可以将使用“特性”功能部署的图片文件移动到一个新的位置 | <MapFile FromPath="OldImg.png" ToPath="NewImg.png"/>                                                      |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|
| # | VersionRange          | 用于版本控制。可以指定版本范围以及应用哪些更新操作。例如：可以用VersionRange元素来更新指定版本的已经部署的“特性”                                             | <VersionRange BeginVersion="3.0.0.0" EndVersion="5.0.0.0" />                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+---|

  现在已经介绍了SharePoint特性提供一种部署一个或多个SharePoint项目项的
  机制，这个机制就是在Feature.xml的ElementManifest元素中指定项目项的对
  应的Element.xml。也介绍了在特性列表中指定额外的元素和属性，如更新操作
  和自定义属性。但是仅指向需要的Element.xml是不够的。针对包含在特性文
  件中不同的SharePoint项目项，我们还需要准确的范围。此外，还需要注意的
  是SharePoint项目项不是都可以部署在相同的范围中的。在介绍SharePoint项
  目项的正确范围之前，先介绍一下SharePoint元素。

* SharePoint元素
  目前为止，在本章中很多次提到了“元素”这个词。不幸的是，我们还会更多
  提到这个词。在本章中有时提到元素，指的是XML元素，如Feature.xml中的
  <Feature> XML元素。还讨论了XML元素ElementManifests和ElementManifest，
  他们在Feature.xml文件中用来将SharePoint项目项的Element.xml和特性关联
  起来。Elements.xml文件是另一个经常提到的“元素” -- Element.xml文件
  与SharePoint项目项相关联，它还包含SharePoint部署SharePoint项目项中的
  功能时需要的信息。

  还有一个必须介绍的“元素”就是SharePoint“元素”。本书中的大部分章节
  都是将重点放在一个或多个SharePoint元素，如内容类型，工作流，列表定义
  和列表实例。大部分情况下，Visual Studio提供为这些SharePoint元素提供
  一个项目项，因此，目前为止可以侥幸不用称呼“SharePoint元素”，而是用
  “SharePoint项目项”来代替。不过，还有更多SharePoint元素可以被创建和
  部署，而他们没有对应的SharePoint项目项。表11-4列出了SharePoint元素及
  他们的描述。

#+CAPTION: 表11-4:SharePoint元素的描述及他们对应的SharePoint项目项

| / | <>                | <>                     | <>                                                                                                   |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 元素              | 对应的SharePoint项目项 | 描述                                                                                                 |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 内容类型          | ContentType            | 见第7章描述的内容类型，“SharePoint内容类型”                                                        |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 内容类型绑定      | N/A                    | 用来定义为list定义内容类型，其中list是那种不可以直接被修改（list按照onet.xml结构定义）               |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 自定义操作        | N/A                    | 允许自定义操作到链接或工具栏项上                                                                     |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 自定义操作组      | N/A                    | 用来分组自定义操作                                                                                   |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 委托控件          | N/A                    | 用来为某一功能指定控件，并为这些控件选择功能提供器。例如，可以指定一个控件，然后向该控件添加提示信息 |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 文档转换器        | N/A                    | 用来定义文档转换器                                                                                   |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 事件接收器        | Event Receiver         | 见第5章，“SharePoint事件接收器”                                                                    |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 特性/网站模板关联 | N/A                    | 包含指定特性，使其作为网站定义配置的一部分                                                           |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 字段元素          | N/A                    | 用来创建网站列                                                                                       |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 隐藏自定义行为    | N/A                    | 允许隐藏自定义行为                                                                                   |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 列表实例          | List Instance          | 用来定义列表实例                                                                                     |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 模块              | Module                 | 模块用来部署那些支持特性的文件                                                                       |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|
| # | 工作流            | Workflow               | SharePoint工作流在第八章介绍，“SharePoint工作流”                                                   |
|---+-------------------+------------------------+------------------------------------------------------------------------------------------------------|

#+BEGIN_SRC html
   这些元素在Visual Studio 2010中的什么地方
   已经注意到，上表中一些元素没有对应的Visual Studio 2010的项目项。虽然
   所有的元素可以添加到Visual Studio发布的特性中，然而不是所有的元素都
   有对应的项目项。不过，这不意味着SharePoint元素没有对应的项目项，就不
   能在Visual Studio 2010中创建和部署这些SharePoint元素。例如，需要部署
   一个自定义行为，可以使用空元素项目项模板。这就是空元素项目项存在的原
   因，他弥补了Visual Studio项目项没有对应的SharePoint元素的缺陷。空元
   素项目项是一个空项目，其中包含一个Element.xml文件，可以将想添加到项
   目中的SharePoint元素的XML描述符添加到Element.xml中。
#+END_SRC

#+BEGIN_SRC html
   表11-4中好像少了点什么--例如，Web部件和应用页在哪儿
   Web部件，可视Web部件和应用页没有出现在表11-4中，因为他们没有对应的
   SharePoint元素。如果打开Web部件项目的Elements.xml，会发现它是以模块
   方式部署的。web部件的定义保存在.webpar文件中，这个文件是通过模块元
   素部署到SharePoint中的。因为应用页就是一个.aspx文件，所以不需要对应
   的SharePoint元素来部署它--应用页作为SharePoint包中的模板文件被部署
   到SharePoint中。
#+END_SRC

   每个在表11-4中描述的元素可以部署的范围是不同的。表11-5给出了各个元
   素可以部署和激活的范围。

#+CAPTION：元素和支持的范围


| /                 | <>   | <>              | <>   | <>  |
|-------------------+------+-----------------+------+-----|
| 元素              | Farm | Web Application | Site | Web |
|-------------------+------+-----------------+------+-----|
| 内容类型          |      |                 | Y    |     |
|-------------------+------+-----------------+------+-----|
| 内容类型绑定      |      |                 | y    |     |
|-------------------+------+-----------------+------+-----|
| 自定义行为        | y    | y               | y    | y   |
|-------------------+------+-----------------+------+-----|
| 自定义行为分组    | y    | y               | y    | y   |
|-------------------+------+-----------------+------+-----|
| 委托控件          | y    | y               | y    | y   |
|-------------------+------+-----------------+------+-----|
| 文档转换器        |      |                 |      | y   |
|-------------------+------+-----------------+------+-----|
| 事件接收器        |      |                 | y    | y   |
|-------------------+------+-----------------+------+-----|
| 特性/网站模板关联 | y    | y               | y    |     |
|-------------------+------+-----------------+------+-----|
| 字段元素          |      |                 | y    |     |
|-------------------+------+-----------------+------+-----|
| 隐藏自定义行为    | y    | y               | y    | y   |
|-------------------+------+-----------------+------+-----|
| 列表实例          |      |                 | y    | y   |
|-------------------+------+-----------------+------+-----|
| 列表模板          |      |                 | y    | y   |
|-------------------+------+-----------------+------+-----|
| 模块              |      |                 | y    | y   |
|-------------------+------+-----------------+------+-----|
| 工作流            |      |                 | y    |     | 
  

* 部署SharePoint特性
  已经介绍了什么是SharePoint元素，以及如何限定范围，现在介绍如何部署
  SharePoint特性到服务器。
  当部署特性时，会将Feature.xml文件和Elements.xml文件拷贝到服务器文件
  系统中。所有的特性和元素文件被安装在SharePoint簇的特性文件夹，如以下
  位置所示：
  Program Files\Common Files\Microsoft Shared\web
  server\extensions\14\TEMPLATE\FEATURES\

  一般情况下，要安装特性，首先将他们打包到 .WSP 文件中，其次对 .WSP 文
  件执行 stsadm.exe 指令-- stsadm.exe会将文件拷贝到SharePoint簇中的相
  应文件夹中并安装文件。但是在这节，我们自己直接拷贝文件到SharePoint簇，
  而不是用 .WSP 包，再用stsadm.exe安装 .WSP 文件。按照以下步骤创建新文
  件夹然后拷贝Feature.xml到创建的文件夹。
  1. 打开SharePoint簇中用于保存特性的FEATURE文件夹（见上）
  2. 创建名为 *MyFeature* 的子文件夹；
  3. 复制 Feature.xml 文件到 *MyFeature* 文件夹。

  Feature.xml文件中包含三个SharePoint元素，分别为 MyElement1,
  MyElement2, MyElement3。清单11-4是Feature.xml文件。

#+CAPTION：Feature.xml
#+BEGIN_SRC xml
  <Feature Title="MyFeature" Id="A7B3B68A-FF24-434D-B129-B3CA435DB954" scope="site">
    <ElementManifests>
      <ElementManifest Location="MyElement1\Elements.xml" />
      <ElementManifest Location="MyElement2\Elements.xml" />
      <ElementManifest Location="MyElement3\Elements.xml" />
    </ElementManifests>
  </Feature>
#+END_SRC

  因为有三个SharePoint元素，所以需要在MyFeature文件夹下创建三个子文件
  夹。每个元素文件夹应该包含在Feature.xml中引用的Elements.xml文件。因
  此MyFeature目录看上去应该像以下显示：
  
#+BEGIN_SRC html
  MyFeature
    MyElement1
      Elements.xml
    MyElement2
      Elements.xml
    MyElement3
      Elements.xml
#+END_SRC
  
  我们像用stsadm安装特性那样将需要的文件放到相应的位置。在命令行中，先
  找到 stsadm.exe 的文件夹，一般在SharePoint服务器上的目录为：
  C:\Program Files\Common Files\Microsoft Shared\Web Server
  Extensions\14\BIN. 为了便于访问 stsadm.exe,可以将目录添加到 *PATH*
  环境变量中。一旦添加目录到path变量中，无论命令行当前目录是什么，都可
  以调用stsadm.exe。然后打开C:\Program Files\Common Files\Microsoft
  Shared\Web Server Extensions\14\TEMPLATE\FEATURES目录，运行以下命令
  来安装特性：

#+BEGIN_SRC bat
stsadm -o installfeature -filename MyFeature\feature.xml
#+END_SRC
  
  使用相同的工具，可以执行不同的指令来卸载特性：

#+BEGIN_SRC bat
stsadm -o uninstallfeature -filename MyFeature\feature.xml -url http://localhost
#+END_SRC

  一旦安装特性成功，我们就可以打开SharePoint网站来手工激活特性。也可以
  使用以下的命令来激活特性：

#+BEGIN_SRC bat
stsadm -o activatefeature -filename MyFeature\feature.xml -url http://localhost
#+END_SRC
  
  要禁用特性指令也类似：

#+BEGIN_SRC bat
stsadm -o deactivatefeature -filename MyFeature\feature.xml -url http://localhost
#+END_SRC

  已经介绍了如何将特性和特性相关的Elements.xml文件保存到SharePoint簇中，
  以及如何手工安装，卸载，激活和禁用SharePoint特性。如果仅有一个
  SharePoint特性需要安装，操作过程并不算复杂。但是如果一次要安装多个
  SharePoint特性该怎么办呢？当然，可以创建一个脚本来执行所有的手工步骤。
  如果有种机制来分组或打包特性到一起，然后直接安装这个包就可以将所有的
  特性安装上就好了。幸运的是，的确有一个方法来这么做，这个方法就叫
  SharePoint解决方案打包。

* SharePoint解决方案打包
  SharePoint解决方案是由一个或多个SharePoint特性组成的。图11-1显示了
  SharePoint解决方案，特性和元素之间的关系。

#+CAPTION: 图11-1：一个包含特性和元素的解决方案
  SharePoint解决方案包含多个特性，每个特性包含多个元素。
  
  解决方案的概念与特性的概念类似，和特性可以将不同的SharePoint元素组合
  到一起一样，解决方案可以将不同的SharePoint特性组合到一起。SharePoint
  解决方案是一个扩展名为 .WSP 的压缩文件（.CAB).这个文件有时被称为解决
  方案包或者包文件。SharePoint解决方案的核心就是一个解决方案清单文件，
  它是一个名为Manifest.xml的XML文件。这个文件指明了解决方案中包含哪些内
  容以及部署解决方案内容的信息。它还包含一个SolutionId用来唯一标识解决
  方案。后面还会看到，还包括其他的配置，如安全控制配置，资源和代码访问
  安全。下面的的表11-5显示了可以用于部署三个特性的解决方案清单。

#+CAPTION:一个用于安装三个SharePoint特性的Manifest.xml

#+BEGIN_SRC xml
  <Solution SolutionId="3ECB7E89-68F3-4EDD-9759-7089413D0C43"
            SharePointProductVersion="">
    <FeatureManifests>
      <FeatureManifest Location="Feature1\Feature.xml"/>
      <FeatureManifest Location="Feature2\Feature.xml"/>
      <FeatureManifest Location="Feature3\Feature.xml"/>
    </FeatureManifests>
  </Solution>
#+END_SRC
  
  由上面的表可以明显看出，FeatureManifests元素和FeatureManifest元素用
  于标识描述特性的Feature.xml特性列表文件。除了指向特性的清单，解决方
  案清单还可以包含更多的信息。表列出了所有可以在解决方案清单中使用的
  XML元素。
  
#+CAPTION:表11-6Manifest.xml文件中所有可用的XML元素。

#+BEGIN_SRC xml
  <Solution>
    <ActivationDependencies>
      <ActivationDependency/>
    </ActivationDependencies>
    <ApplicationResourceFiles>
      <ApplicationResourceFile/>
    </ApplicationResourceFiles>
    <Assemblies>
      <Assembly>
        <SafeControls>
          <SafeControl/>
        </SafeControls>
        <ClassResources>
          <ClassResource/>
        </ClassResources>
      </Assembly>
    </Assemblies>
    <CodeAccessSecurity>
      <PolicyItem>
        <PermissionSet>
          <IPermission/>
        </PermissionSet>
        <Assemblies>
          <Assembly/>
        </Assemblies>
      </PolicyItem>
    </CodeAccessSecurity>
    <DwpFiles>
      <DwpFile/>
    </DwpFiles>
    <FeatureManifests>
      <FeatureManifest/>
      </FeatureManifests>
    <Resources>
      <Resource/>
    </Resources>
    <RootFiles>
      <RootFile/>
    </RootFiles>
    <SiteDefinitionManifests>
      <SiteDefinitionManifest>
        <WebTempFile/>
      </SiteDefinitionManifest>
    </SiteDefinitionManifests>
    <TemplateFiles>
      <TemplateFile/>
    </TemplateFiles>
  </Solution>
#+END_SRC

  在表11-6中列出了用于解决方案清单文件的XML元素描述

  从表11-6可以看出解决方案清单不仅用于部署指定的特性。它还有更多功能，
  例如为Web部件定义安全控件，部署资源文件以及部署网站定义。

#+CAPTION:解决方案清单中的XML元素

| / | <>                       | <>                                                                                                                                                                                                                               | <>                                                                                                                                                    |                                    |                                                          |
|---+--------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------+----------------------------------------------------------|
| # | 元素                     | 描述                                                                                                                                                                                                                             | 示例                                                                                                                                                  |                                    |                                                          |
||
| # | ActivationDependencies   | 这个元素用法与特性清单文件中的ActivationDependencies相同。可以通过它来指定当前包的依赖包。例如：SharePoint解决方案被分割成两个包，一个包包含基本的功能和SharePoint元素，另一个包包含额外的功能，这个包需要前一个包已经部署上。   | <ActivationDependencies><ActivationDenpendency SolutionId="GUID" SolutionName="BaseSolution"/></ActivationDependencies>                               |                                    |                                                          |
||
| # | ApplicationResourceFiles | 这个元素指定解决方案需要包含的所有资源文件。例如：需要部署解决方案需要的资源文件，如图片文件。                                                                                                                                   | <ApplicationResourceFiles>  <ApplicationResourceFile     Location=string/>  <App_GlobalResourceFile     Location=string/></ApplicationResourceFiles>  |                                    |                                                          |
||
| # | Assemblies               | 这个元素指定解决方案应该包含的程序集                                                                                                                                                                                             | <Assemblies><Assembly Location="MyWorkFlow.dll" DeploymentTarget = "GlobalAssemblyCache" > </Assemblies>                                              |                                    |                                                          |
||
| # | SafeControls             | 这个元素指定那些需要添加到安全控件列表中的程序集中的安全控件，一般用在网站部件上。例如：当部署Web部件时，Visual Studio会自动为web部件项目添加SafeControl入口。                                                                   | <SafeControls> <SafeControl Assembly = "Text" Namespace = "Text" Safe = "TRUE"                                                                        | "FALSE" SafeAgainstScript = "TRUE" | "FALSE" TypeName = "Text"> </SafeControl> <SafeControls> |
||
| # | ClassResources           | 这个元素为程序集指定资源。例如：ClassResources类型是用来部署那些程序集中的控件需要的资源。这些资源也可以在代码中访问。                                                                                                           | <ClassResources> <ClassResource FileName = "Text" Location = "Text"> </ClassResource> </ClassResources>                                               |                                    |                                                          |
||
| # | CodeAccessSecurity       | 这个元素为特定的程序集定义信任级别和自定义策略文件。如果程序集需要一个高的信任级别，可以通过创建自定义策略来实现，而不用提高整个服务器的信任级别。                                                                               | 见第9章，"SharePointWeb部件"中如何使用CodeAccessSecurity元素的例子                                                                                    |                                    |                                                          |
||
| # | DwpFiles                 | 添加这个元素才允许部署web部件到SharePoint中。                                                                                                                                                                                    | <DwpFiles> <DwpFile FileName = "Text" Location = "Text"> </DwpFile> </DwpFiles>                                                                       |                                    |                                                          |
||
| # | FeatureManifests         | 这个元素指向那些需要该解决方案部署的特性                                                                                                                                                                                         | <FeatureManifests <FeatureManifest Location="Text"/> </FeatureManifests>                                                                              |                                    |                                                          |
||
| # | Resources                | 这个元素定义了当前解决方案的资源文件                                                                                                                                                                                             | <Resources <Resource Location="Text"/> </Resources>                                                                                                   |                                    |                                                          |
||
| # | RootFiles                | 这个元素用来将那些特定文件拷贝到SharePoint簇文件夹中。所极根文件被部署到SharePoint服务器的SharePoint簇里：Program Files\Common Files\Microsoft Shared\Web Server Extensions\14                                                   | <RootFiles> <RootFile Location = "Text"> </RootFile> </RootFiles>                                                                                     |                                    |                                                          |
||
| # | SiteDefinitionManifests  | 这个元素可以将网站定义包含到解决方案中。                                                                                                                                                                                         | <SiteDefinitionManifests> <SiteDefinitionManifest Location="Text"> <WebTempFile Location="Text"> </SiteDefinitionManifest> </SiteDefinitionManifests> |                                    |                                                          |
||
| # | WebTempFile              | 网站模板定义文件与解决方案中的网站定义结合使用。                                                                                                                                                                                 | <WebTempFile Location="Text"> </WebTempFile>                                                                                                          |                                    |                                                          |
||
| # | TemplateFiles            | 这个元素与RootFile元素类似。它可以将指定文件拷贝到TEMPLATE文件夹中。一般情况下，这个元素将文件拷贝到_layouts虚拟目录，这个目录一般映射到\TEMPLATE\_LAYOUTS文件夹。例如：Application Pages和工作流表单是按照TemplateFiles部署的。 | <TemplateFiles> <TemplateFile Location="Text"/> </TemplateFiles>                                                                                      |                                    |                                                          |

  在SharePoint服务器上安装解决方案比安装特性需要做更多的工作。在安装解
  决方案到服务器上之前，需要先创建.WSP文件。在后面的章节会介绍如何通过
  stsadm.exe手工创建解决方案。在创建完解决方案包后，就可以使用
  stsadm.exe来把它安装到服务器上。然后，会发现Visual Studio会自动完成
  所有这些工作，不过，现在要一步一步来做这些，以便更好的理解Visual
  Studio在后台都做了哪些工作。

* 部署SharePoint解决方案
  为了创建SharePoint解决方案包，需要创建解决方案文件夹结构并拷贝需要的
  文件到相应的文件夹。在开始创建解决方案包时，先从一个空的要目录开始，
  并将包清单文件（Manifest.xml）拷贝到该文件夹。为解决方案每个相关的特
  性创建一个文件夹，并将特性的Feature.xml文件放入那个文件夹。因为每个
  特性一般都包含SharePoint元素的Elements.xml文件，需要在特性文件夹中创
  建元素文件夹并将Elements.xml放入相应的文件夹中。
 
  举例说明，有一个解决方案包含两个特性，第一个，Feature1，其中包含两个
  元素：Element1和Element2，第二个，Feature2，包含一个元素：
  Element3.如果依据上面的规则创建解决方案的目录，应该如下所示：

#+BEGIN_SRC html
  RootFolder
    Manifest.xml
    Feature1
      Feature.xml
      Element1
        Elements.xml
      Element2
        Elements.xml
    Feature2
      Feature.xml
      Element3
        Elements.xml
#+END_SRC

  根据文件夹结构就可以知道包清单文件应该是什么样的。清单11-7显示了上面
  例子对应的manifest.xml文件。

#+BEGIN_SRC xml
  <Solution SolutionId="" SharePointProductVersion="14.0">
    <FeatureManifests>
      <FeatureManifest Location="Feature1\Feature.xml" />
      <FeatureManifest Location="Feature2\Feature.xml" />
    </FeatureManifests>
  </Solution>
#+END_SRC
