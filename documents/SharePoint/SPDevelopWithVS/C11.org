#+title:打包和部署

* 基础和超越
  在本书中，你已经看了很多例子，创建不同类型的SharePoint部件并将他们部
  署到SharePoint中。在大部分情况下，我们可以在项目中添加部件（列表，网
  络部件，事件接收器等）然后按 F5 进行打包，并部署到SharePoint中。

  在本章，我们要讨论的是：在按F5键后，打包和部署SharePoint部件这些操作
  背后到底发生了什么。此外，还会讨论什么时候，怎么样以及为什么修改默认
  的打包和部署设置。还会展示如何使用Visual Studio来创建自定义的部署步
  骤和部署配置。
* SharePoint的特性（Features）
  为了全面了解VisualStudio2010提供的打包和部署特性，我们需要从
  SharePoint的基础模块：SharePoint特性（Features）开始。当理解了如何手
  工处理创建，部署和激活SharePoint特性后，VisualStudio2010做了如此多的
  工作来让开发人员可以轻易的部署SharePoint特性（Features）。

  当讨论SharePoint特性时，很可能马上会想到SharePoint特性是如何将额外的
  功能添加到SharePoint中的。当特性被部署到SharePoint服务器并并被激活，
  特性中的功能就可以被用到SharePoint的网站上了。从技术角度讲，
  SharePoint的特性就是一个被简单命名为Feature.xml的XML文件。
  Features.xml文件被称为特性列表文件（feature manifest file）.这个文件
  包含特性的一般信息，例如：ID，名称和范围。

  特性的ID和名称不用多说，这两个特性就是用来定义特性的唯一性的。名称就
  是一个任意的字符串，ID即GUID--全球唯一标识符--格式
  为:"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx". 其中 "x" 是十六进制中的任
  意数--从0到9以及a,b,c,d,e和f。大部分时候，VisualStudio会在需要时自动
  创建GUID，例如：在VisualStudio中新创建一个SharePoint特性，GUID会自己
  被创建。有时，即使需要创建自己的GUID，也不用手工创建。需要GUID时，可
  以在VisualStudio的工具栏中运行创建GUID指令，来生成GUID，并将新生成的
  GUID拷贝到剪切板，然后粘贴到需要的文件中。

  所有的SharePoint功能都是在特定范围内有效的，这些范围包括：Farm，Web
  Application，Site 或者 Web。如果一个特性的范围被设定为Farm，那么这个
  特性就会在服务器上的所有网站和网站集上有效。如果特性的范围被设定为
  Web，那么该特性仅在其安装的网站有效，并且该特性在该网站上已被激活。
  表格11-1显示了特性可以被部署和激活的四个范围。值得注意的是，对于
  SharePoint中自定义部件不能随意指定范围，一些SharePoint部件必须被安装
  在特定的范围内，例如，Content types和工作流只能被安装在Site范围内，
  而custom actions可以安装在任意范围。将会在SharePoint元素这节，会详细介绍
  各类型的SharePoint自定义部件可以安装在哪些范围内。

#+CAPTION: 表11-1：SharePoint特性的范围

|---+-----------------+--------------------------------------------------------------------------------------+---|
| / | <>              | <>                                                                                   |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Scope           | Description                                                                          |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Farm            | 特性如果被安装在Farm并激活，则在Farm中的所有网站可以使用该特性                       |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Web Application | 特性如果被安装在Web Application并激活，则在Web Application中的所有网站可以使用该特性 |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Site            | 特性如果被安装在Site并激活，则在网站集中的所有网站可以使用该特性                     |   |
|---+-----------------+--------------------------------------------------------------------------------------+---|
| # | Web             | 特性如果被安装在Web并激活，则在该网站中可以使用该特性                                |   |

  正如清单11-1所示，定义一个空的特性文件，至少需要名称、ID和范围，但是在
  大多数情况下，需要额外的属性来指定特性中关联的功能和自定义部件。

#+CAPTION: 清单11-1：最简单的可用的Features.xml特性表单

#+BEGIN_SRC xml   
  <Feature Title="SharePoint Feature"
           ID="2ED8F169-EA82-43A5-B4E5-641D8C03B811" Scope="Site">
  </Feature>
#+END_SRC

  可以将清单中的Feature.xml部署到SharePoint服务器上，但是这样做是没有
  意义的，因为特性文件是 *空* 的--它仅包含特性文件最小定义而不包含任何
  其他功能。
 
  特性清单文件一般会包含一个XML元素--ElementManifests, 它可以包含多个指
  向Elements.xml的名为ElementManifest的XML元素，Elements.xml文件中包含
  着特性中的功能的实际信息。之前的章节中，每个创建的SharePoint项目都包
  含一个Elements.xml文件。Elements.xml文件就是Feature.xml文件中
  ElementManifest元素所指向的文件。例如，如果想通过清单11-1中的特性文件
  部署一个名为MyElement1的SharePoint项目部件，需要添加ElementManifests
  元素，然后添加包含Location属性的ElementManifest子元素，Location属性
  被设置为描述MyElement1的Elements.xml的位置，见清单11-2
                                     |
#+BEGIN_SRC xml
  <Feature Title="SharePoint Feature"
           ID="2ED8F169-EA82-43A5-B4E5-641D8C03B811" Scope="Site">
    <ElementManifests>
      <ElementManifest Location="MyElement1\Elements.xml" />
    </ElementManifests>
  </Feature>
#+END_SRC

  如果想用同一个特性文件部署更多的SharePoint项目文件，只需要在
  ElementManifests元素中添加更多的ElementManifest元素，并在
  ElementManifest元素中添加Location属性，该属性指向关于SharePoint项目文
  件的Elements.xml.

  除了ElementManifests和ElementManifest，还有其他一些XML元素可以应用到
  特性文件中。清单11-3中显示了包含所有可用元素的特性文件的结构。

#+CAPTION: Feature.xml文件中可以包含的所有可用的XML元素

#+BEGIN_SRC xml
  <Feature>
    <ActivationDependencies>
      <ActivationDependency/>
      <ActivationDependency/>
    </ActivationDependencies>
    <ElementManifests>
      <ElementFile/>
      <ElementManifest/>
    </ElementManifests>
    <Properties>
      <Property/>
      <Property/>
    </Properties>
    <UpgradeActions>
      <AddContentTypeField/>
      <ApplyElementManifests>
        <ElementFile/>
        <ElementManifest/>
      </ApplyElementManifests>
      <CustomUpgradeAction>
        <Parameters>
          <Parameter/>
        </Parameters>
      </CustomUpgradeAction>
      <MapFile/>
      <VersionRange>
        <AddContentTypeField/>
        <ApplyElementManifests/>
        <CustomUpgradeAction/>
        <MapFile/>
      </VersionRange>
    </UpgradeActions>
  </Feature>
#+END_SRC

  表11-2描述了各个属性并举例说明。注意，表中不包含 *UpgradeActions* 元
  素，该元素会在本章后面介绍。


|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| / | <>                   | <>                                                                                                                                                                                                                                               | <>                                                                                                                                  |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | *元素*               | *描述*                                                                                                                                                                                                                                           | *示例*                                                                                                                              |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ActivationDependency | ActivationDependency元素通过特性ID指明当前特性依赖的另一特性，例如：这个功能可以用在以下情况，要部署一个List以及依赖于这个List的工作流，这个元素可以确保在激活工作流前先激活List。                                                               | <ActivationDependency FeatureID="C0BE46EA-0209-4285-B586-EC27EFA9B758"/>                                                            |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ElementFile          | ElementFile元素指明当前特性依赖的文件，例如：可以使用ElementFile元素来部署特性需要的文件（资源文件，文本文件，图片，ASPX文件，XML文件等）                                                                                                        | <ElementFile Location="Resources\Resources.resx" />                                                                                 |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | ElementManifest      | ElementManifest元素用来指向Element.xml文件，Element.xml文件中包含了需要特性来部署的SharePoint项目对象的信息                                                                                                                                      | <ElementManifest Location="ListInstance1\Elements.xml" />                                                                           |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| # | Property             | Property元素是用来定义特性的属性的。特性的属性可能通过指定属性名和默认值来定义。可以在事件特性接收器的的代码中使用传给事件委托方法的 *属性* 参数（SPFeatureReceiverProperties类型）来访问属性，如：properties.Feature.Properties["Color"].Value. | <Properties>    <Property      Key="Color"      Value="Blue"/>    <Property      Key="Shape"      Value="Triangle"/>  </Properties> |
|---+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|

  SharePoint 2010中添加了一个新的名为UpgradeActions的元素。这个元素是针
  对指定的特性执行指定升级操作。这个元素的目的是指定如何升级现有的特性
  实例。例如，已经在SharePoint服务器上部署了特性（内容类型
  （ContentType）和网站列（site columns）),现在需要相应的删除网站列并更
  新内容类型，可以使用UpgradeAction元素来指定CustomUpgradeAction和一个
  参数，参数中包含需要删除的网站列名称。然后需要实现FeatureUpgrading事
  件接收方法并根据传入该方法的参数来决定更新操作名称和参数。表11-3列出
  了有哪些更新操作元素可以添加到特性列表文件中。

| / | <>                    | <>                                                                                                             | <>                                                                                           |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | 元素                  | 描述                                                                                                           | 举例                                                                                         |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | AddContentTypeField   | 将一个新列添加到已经存在的内容类型中，例如：已经在一个特性中部署了内容类型，现在想在内容类型中添加添加一个新列 | <AddContentTypeField   ContentTypeId = string  FieldId = string  PushDown = TRUE or FALSE /> |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | CustomUpgradeAction   |                                                                                                                |                                                                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | ApplyElementManifests |                                                                                                                |                                                                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | Parameter             |                                                                                                                |                                                                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | MapFile               |                                                                                                                |                                                                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|
| # | VersionRange          |                                                                                                                |                                                                                              |   |
|---+-----------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+---|


