2.2删除文本

在学习删除指令之前，你或许想先知道撤消指令，我们会在本章后面对撤消指令
做全面介绍.输入C-_或者C-x u来撤消最近一次的编辑操作,再次执行撤消指令来
撤消上上次操作,等等.

Emacs提供许多删除文本的方法,最简单的方法是按Dle键,按完之后会立即删除光
标左侧的字符.看一下Del键在你的键盘上的位置,有时它被称为BackSpace键.Del
清晰的表述了它的功能:删除前一个字符.如果你在录入的时候想删除最后一个录
入的字符,应该按哪个键呢?应该按在Emacs中称为Del的键.

Emacs提供很多种其他的删除指令,或许对你来说太多了,然而你最终会因为某种原
因使用它们中大部分指令.例如:C-d(表示delete-char)删除光标下的字符.删除下
一个单词的指令是M-d(表示kill-word).再次注意Meta键的增强指令的特性:C-d操
作一个字符,而M-d操作一个单词.

Emacs具有删除前一个或后一个单词,句子和段落的指令.通过他们的名字你也能猜
出他们在单词间,句子间,段落间的功能.如果光标在一个实体的中间,他们做的事
会有点儿古怪:它们会删除部分单词,句子或段落. 向前删除还是向后删除是由指
令自身决定的.例如,下面显示了M-d删除时的不同行为,这是由光标位置决定的.

类似的,如果光标在一个单词的中间,你要删除单词的前半部分,按M-Del(表示
backward-kill-word),它会删除当前单词中从光标位置到单词开头的部分.

如果想删除整行或者一行的一部分,可以用C-k(表示kill-line)指令,这个指令会
删除从光标位置到行尾的全部内容.在一个空白行输入C-k,会删除当前的空白行.因
此,一般输入两次C-k来删除一行内容:一次删除文本内容,第二次删除前一次产生
的空白行.如果想删除从行首到光标位置的内容,可以输入一个更复杂的指令
Meta-C-k (也就是,按住Meta键,再按连字符'-',再按C-k).

也可以使用C-k连接两行.在行尾输入C-k,会删除换行符,就可以有效的将两行连接
成一个更长的行.

2.2.1杀戮环(The Kill Ring)

你或许已经注意到Emacs中的一些删除指令被称为'杀戮'(kill)指令，例
如:kill-region, kill-word等等.在Emacs中,删除指令并不致命,事实上却恰恰相
反.被删除的文本不是被永久删除而是被隐藏在被称为杀戮环(kill ring)内.尽管
杀戮环听起来像个暴力团伙,它仅是一个存储区域用于存储复制或删除的内容.不
要将杀戮环和系统剪切板混淆.我们会在本章后面介绍Emacs如何与系统剪切板关
联.

你可以输入C-y(表示yank)恢复删除的内容.[3]如果你连续删除了多行,Emacs会将
他们收集到一个单独的单元并将其放入杀戮环,一个简单的指令C-y可以方便的将
所有东东恢复.在下面的例子中,我们会使用C-k四次来删除<<两人城市的尾巴>>的
前两行.(记住,第一个C-k删除文本,第二个C-k删除空白行)然后我们使用一个C-y
就可以恢复删除的内容.

[3如果你是一个Linux或者Windows用户,或许已经习惯于在各应用程序中使用C-v
来执行粘贴操作.Emacs有选项可以改变其默认的粘贴,剪切,和复制指令,重新定义
成你熟悉的C-v,C-x和C-c.见'让Emacs按照你的方式工作',了解详情.对那些正在
学习Emacs的vi使用者提出一个警告:vi也使用术语yank,但是两处的yank的含义几
乎完全相反.别混淆两者的概念.

初始状态:

图

光标在左上角

输入:C-k C-k C-k C-k

图

你已经删除用C-k指令删除了前两行

输入:C-y

图

通过一个指令就恢复了全部内容

哪些会完整的保存到杀戮环?用C-k或者C-w指令删除的内容,以及M-w复制的内容
(这两个指令会马上介绍.)都会保存到杀戮环.被M-d,M-del和其他相关指令删除的
单词,句子和段落也会保存进去.此外,你用C-u Del或C-u C-d删除的内容也会保
存.唯一不会保存的就是用Del和C-d删除的字符(如果你想恢复,可以将此类删除通
过撤消指令恢复,快捷键为C-_和C-x u.)

Emacs对哪些内容保存到杀戮环是比较聪明的:当它根据一组删除操作重组一大块
文档时,它一般都能保持文本排版的正确.便即,你输入几次M-d,然后输入几次
M-del,再穿插输入几次C-k.当你输入C-y,Emacs会按照原版恢复文本.

然而,你需要注意的是:当你执行一个非杀戮指令后,Emacs会立即停止组装文本块.例
如:你用C-k删除一行,又用C-d删除一个字符,再用C-k删除一行,你已经打断了执行
顺序.Emacs不认为删除字符指令C-d是一个'杀戮'指令,它只是一个删除操作而且
并没有存储它.这种情况下,你没有后成一个连续的杀戮指令存储区,你生成了两个
存储区.后面,我们会介绍如何获取之前'杀戮'掉的文档.

表2-3 删除,杀戮,还原指令汇总,以及对应的编辑菜单中的选项.
