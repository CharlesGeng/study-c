#title 1.3. 关于模式

Emacs拥有很多编辑模式，各种模式都有些微的不同，这也是它以多功能著称的原
因之一。模式这个词听起来很专业，但是它实际是含义是：Emacs对你手里的各种
任务都很敏感。当你写作时，你希望有自动换行功能，这样就不用在每行结束时
按一下回车键。当你编程时，代码必须按照编程语言的要求格式化好。对于写
作，有文本模式；对于编程，不同语言有不同的模式，包括C,Java和Perl等。模
式使Emacs针对不同的任务都拥有友好的交互过程。

文本模式和Java模式都是主模式。一个缓冲区只有一个主模式，离不开一个主模
式就会进入到另一个。表1-1列出了一些主模式，介绍他们的功能以及在本书中介
绍的章节。

表1-1 主模式
模式 | 功能
基本模式 | 默认模式（6章）
文本模式 | 用于编辑文本（2章)
只读模式 | 只能浏览文档不能修改（4章）
Shell模式 | 在Emacs里运行一个Shell（5章）
大纲模式 | 编辑大纲（7章）
缩进文本模式 | 自动缩进文本（7章）
段落缩进文本模式 | 自动缩进每段的第一行（7章）
绘图模式 | 用ASCII码绘图（7章）
HTML模式 | 编辑HTML（8章）
SGML模式 | 编辑SGML和XML（8章）
LaTeX模式 | 格式化TEX和LATEX文件（8章）
编译模式 | 编译程序（9章）
CC模式 | 编辑C，C++和Java程序（9章）
Java模式 | 编辑Java程序（9章）
Perl模式和CPerl模式 | 编辑Perl程序（9章）
SQL模式 | 用SQL访问数据库（9章）
Emacs的Lisp模式 | 编辑Emacs的Lisp函数（9和11章）
Lisp模式 | 编辑Lisp程序（9和11章）
Lisp交互模式 | 编辑和计算Lisp表达式（9和11章）

当你编辑文件的时候，Emacs都会尝试根据文件的类型打开相应的主模式，如果你
编辑一个以.c结尾的文件，那么Emacs会打开CC模式。如果你编辑一个以.el结尾
的文件，那么Emacs会打开Lisp模式。有时Emacs是根据文件内容而不是文件名来
确定主模式的。如果你编辑一个按TEX格式排版的文件，Emacs会打开LaTex模式。
如果无法确定是哪种模式，则进入通用的基本模式。因为Emacs可扩展，所以附加
模式也可以用，我们也会介绍一些1-1表中没有列出的模式。

此外，除了主模式还有副模式。副模式定义了Emacs的一些特殊行为，它们可以在
主模式中打开或关闭。自动换行模式表示Emacs可以让文本自动换行，当你输入很
长一行的时候，它可以在适当位置自动换行。表格1-2列出了一些副模式，介绍他
们的功能以及在本书中介绍的章节。

表1.2. 副模式

模式 ｜ 功能

autofill-mode 自动换行模式 | 允许自动换行(第2章)
overwrite mode 替代模式 | 用你想输入的内容替换你输入的代名词(第2章)
auto-save mode 自动保存模式 | 定时自动保存文件到特定的自动保存文件中（第2章）
ISearch mode 查找模式 | 用于查找（第3章）
flyspell mode 即时拼写检查模式 | 用于即时检查拼写错误（第3章）
Flyspell prog mode 程序检查模式 | 用Flyspell检查程序拼写（第3章）
Abbrev mode 简写模式 | 允许使用单词简写（第3章）
Paragraph indent text mode 段落缩进模式 | 自动缩进每段的第一行（第7章）
Refill mode 重新换行模式 | Emacs对当前正在编辑的段落进行换行操作（一个试验性质的模式，在第2章提到）
Artist mode 艺术家模式 | 用鼠标绘制ASCII码图片（第7章）
Outline mode 大纲模式 | 编辑大纲（第7章）
SGML name entity mode SGML实体名称模式 | 用于向HTML，SGML和XML文档中插入指定的实体名称（第8章）
ISO accents mode 重音字符模式 | 用于输入有重音的字符（法文等cafĉ）(load-library "iso-acc")(M-x iso-accents-mode)
Font lock mode 语法高亮模式 | 让文本在颜色和字体上变得明显来提高可读性（例如：将代码和注释分开）（第9章）
Compilation mode 编译模式 | 用于编译程序（第9章）
Enriched mode 强化模式 | 用于保存文本的特性（第10章）
VC mode 版本控制模式 | 在Emacs中使用不同的版本控制系统（第12章）
Info mode 信息模式 | 一个阅读Emacs自身文档的模式（第14章）

你或许注意到一些模式即是主模式也是副模式，比如：文本缩进模式，大纲模
式，以及编译模式。它们即可以单独作为主模式使用也可以作为副模式与其他主
模式一起使用。


还有很多其他模式我们没有讨论，包括一些晦涩的但有趣的编程语言（如
Modula-2）。还有一些Emacs自身使用的模式，比如用于文件夹管理功能的文件夹
模式（第5章介绍）

此外，如果擅长Lisp编程，你可以添加你自己的模式。Emacs几乎可以无限扩展。
