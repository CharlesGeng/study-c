#+title: 2.3 删除，移动或修改标记的文本

如果你想删除一个短语，半个段落或者多个段落会怎么做？在Emacs中，你选择的
一块文本称为 /区域/ 。你可以用鼠标或者键盘标记一个区域。用鼠标时会有些
复杂，所以我们会在讨论系统剪切板后再行介绍。

用键盘定义一个区域，你使用一个辅助指针，我们称之为 /标志/ 。一些版本的
Emacs会在显示屏上显示标志；不幸的是，在GNU Emacs里不显示。

在区域的一端按 *C-Space* 或者 *C-@* 设置标记，然后移动光标到区域的另一端。(光标有时也被称为 /点(Point)/ 。然而，光标和点有一个小
小的但是很重要的区别。光标是在字符之上的，而点是实际上是在光标所在字符与之前字符之间。正如我们所言，这是一个比较小的区别，但它有
助于你理解在标定区域时光标应该到标记到什么位置。)图2-5说明点，标志，和区域。

#+CAPTION: 图2-5 点，标志和区域
[[../images/ge3_fig0205.gif]]

我们来标记一个示例区域，移除短语"it was the worst of times"。首先，我们找到短语的开头，然后我们设置标记，向前移动到短语结尾，然后
剪切。

| 移动到起始位置“it”然后按 *C-space* |
|--------------------------------------|
| [[../images/ge3_ch02scrn04.gif]]         |
|--------------------------------------|
| 设置标志； *Mark Set* 出现在迷你缓冲区中           |

将光标移动到“it was the age of wisdom。”中的“i”。因为点（point）就在‘i’之前，这个位置是对的。

现在已经标记好区域。在执行删除指令之前，如果标记区域没有高亮显示，你需要先确认是否已经正确地标记区域了。按 *C-x C-x* (表示
*exchange-point-and-mark* )；这个指令让光标显示位置在标志与点之间相互切换。如果光标移动到了你想标记的位置，说明区域已经正确标记
了。尤其是在你看不到 /标记/ 的时候，删除区域前用 *C-x C-x* 检查标记的区域是个良好的习惯。一些用了几年Emacs的人仍然会忘了标记区域
就在不知情的情况进行删除操作。（绑定到 *c-_* 和 *c-x u* 的撤消指令迟早会在派上用场）

删除区域，按 *C-w* （表示 *kill-region* )。（工具栏的剪刀图标也是这个功能。）

如果不确定删除了哪些内容，只要按 *C-_* 就可以还原。文本仍旧被标记着，你可以再次按C-w来删除它。移动文本，标记区域，按 *C-w* 剪切区
域，移动光标到你想插入文本的位置，然后按 *C-y* 。如果你在错误的位置还原了文本，只要按 *C-_* 来撤销，然后移动到正确的位置，再次按
*C-y* 插入文本。

标记一个区域时，一般是先标记一端然后把光标移动到区域的另一端。针对一些常见情况定义了相应的快捷键。标记一个段落，按 *M-h* 。可以
设置标记到段尾并将光标自动移动到开始位置。类似的， *C-x h* (表示 *mark-whole-buffer* )标记整个缓冲区；光标移动到开头，并且标记到
尾部。最后， *C-x C-p* 标记当前页，标记那些在文本模式下用 *C-l* 分页符分割好的文本。当然，标记段落，页面，或者缓冲区一般只是其他
操作（剪切， *C-w* ）的前奏而已。

*2.3.1 复制文本*

要复制文本，先标记一个区域，再按 *M-w* （表示 *kill-ring-save* ; 工具栏的两张纸的图标也可以执行此功能）。将光标移动到你想插入复制
的文本的位置然后按 *C-y* 。复制文本与剪切文本是一样的，只不过Emacs不删除任何东东而已。复制的文本被放入杀戮环（kill ring），所以
你可以随时通过 *C-y* 访问它。

*M-w* 的优势还在于可以在只读文件和缓冲区中使用。例如，如果你想创建一个Emacs技巧文件，可以使用 *M-w* 来复制在线帮助文本到你的缓冲
区中。

针对一般的删除任务的操作。

标记区域：

 1. 将光标移动到要删除区域的起始位置。
 2. 按 *C-Space* 。Emacs显示提示信息 *Mark set* 。
 3. 将光标移动到要删除区域的结束位置。

删除一个区域：

 1. 标记被删除区域。
 2. 按 *C-w* 删除区域。

移动文本：

 1. 使用标记和删除区域的过程来删除你想移动的文本。
 2. 将光标移动到你想插入文本的位置。
 3. 按 *C-y* 。Emacs插入刚删除的文本。

复制文本：

 1. 标记你想复制的区域。
 2. 按 *M-w* 复制文本。
 3. 移动光标到你想插入文本的位置，然后按 *C-y*。Emacs插入刚复制的文本。

*2.3.2 还原早期的删除内容*

之前提到的杀戮环是Emacs存储你删除内容的区域。当下，我们假设你想还原你刚刚删除的内容。然而杀戮环会做的更多。它能保存你最近30次的
删除内容。我们已经看过了， *C-y* 可以还原你最近删除的内容。输入 *M-y* 删除你刚还原的文本，并从杀戮环还原次最近的文本。

Here's how it works. In Table 2-4, assume that you've just killed the words "most recent." C-y retrieves these words from the
kill ring. When you press M-y, Emacs gets rid of "most recent" and gets the next entry from the kill ring ("second-last").

这里显示它如何工作。在表2-4中，

You can keep on typing M-y, retrieving successively more ancient deletions, until you reach the end of the kill ring (at which
point it cycles back to the most recently killed text; that's why it's called a ring).

Thirty deletions by default is a nice size―far more generous than most programs offer. But you can enlarge or reduce the size
of the kill ring if you wish, using a variable called kill-ring-max. To experiment, give the command: M-x set-variable Enter
kill-ring-max Enter new-value Enter (where new-value is a number).

2.3.3 Selecting and Pasting

Using the menus, you can access text from the kill ring in a more straightforward way: by choosing Edit Select and Paste. A menu
showing deletions appears, with the most recent ones on top. To show you as many deletions as possible, each line in the window
represents a separate deletion. So if you've killed a large region, say 500 lines, you see only the beginning of the first line
of that deletion, ellipses, and the end of the deletion. Your selection is pasted into the buffer at the cursor position.

Table 2-5 summarizes commands for working with regions.


